Pista algo1 {
    var entero algo, otro = 2+5*7-1;
    var cadena cade = "hola mundo "+algo;
    var boolean conditi = verdadero;
    var entero arreglo arr10,arr20,arr30 [][]={{5,10,15},{20,25,30}};

    Principal() {
        algo();
        arr10[1][1] = 30+5;
    }
    algo (){
        otro = 5;
        var cadena cades = "hola Elvis";
        var cadena cadess = "Adios Elvis";
        Mensaje("la sentencia es: "+ (5 >= otro) +"  por lo tanto; ");
        si(5 >= otro) {
            cade = cades;
            var entero iter = 0;
            hacer {
                Mensaje(cade);
                iter++;
                Mensaje(iter);
            }mientras(2>iter);
            var entero rest = sum(5,2) + sum(2,1);
            Mensaje("El resultado de la operacion es: "+ rest );
            Reproducir(Do,5, 1000,5);
            Reproducir(Re,4, 1500,3);
            Esperar(200,5);
            Reproducir(Re,4, 1500,3);
            Reproducir(Mi,6, 3500,5);
            Reproducir(Sol,7, 1500,2);
            Esperar(200,3);
            Reproducir(Fa,5, 500,3);
        } sino {
            cade = cadess;
            algo = 28;
            Mensaje(cade);
        }
    } 
    entero sum(entero num1, entero num2){
        retorna num1+num2;
    } 
} 





Pista algo1 {
    var entero algo, otro = 2+5*7-1;
    var cadena cade = "hola mundo "+algo;
    otro = 5;
    var boolean conditi = verdadero;
    var entero arreglo arr10,arr20,arr30 [][]={{5,10,15},{20,25,30}};

    Principal() {
        algo();
        arr10[1][1] = 30+5;
    }
    algo (){
        var cadena cades = "hola Elvis";
        var cadena cadess = "Adios Elvis";
        Mensaje("la sentencia es: "+ (5 >= otro) +"  por lo tanto; ");
        si(5 >= otro) {
            cade = cades;
            var entero iter = 0;
            hacer {
                Mensaje(cade);
                iter++;
                Mensaje(iter);
            }mientras(2>iter);
            var entero rest = sum(5,2) + sum(2,1);
            Mensaje("El resultado de la operacion es: "+ rest );
        } sino {
            cade = cadess;
            algo = 28;
            Mensaje(cade);
        }
    } 
    entero sum(entero num1, entero num2){
        retorna num1+num2;
    } 
} 
Pista algo2 {
    var entero algo, otro = 2+5*7-1;
    var cadena cade = "hola mundo "+algo;
    otro = 5;
    var boolean conditi = verdadero;
    var entero arreglo arr10,arr20,arr30 [][]={{5,10,15},{20,25,30}};

    Principal() {
        Para(Var Entero i = 0; i < 3; i++){
            Reproducir(Do, 2 * (i+1), 500, i);
            Reproducir(Sol, 2 * (i+1), 500, i);
            Reproducir(Sol, 2 * (i+1), 500, i);
            Reproducir(La, 2 * (i+1), 500, i);
            Reproducir(La, 2 * (i+1), 500, i);
            Reproducir(Sol, 2 * (i+1), 500, i);
            Reproducir(Fa, 2 * (i+1), 500, i);
            Reproducir(Fa, 2 * (i+1), 500, i);
            Reproducir(Mi, 2 * (i+1), 500, i);
            Reproducir(Mi, 2 * (i+1), 500, i);
            Reproducir(Re, 2 * (i+1), 500, i);
            Reproducir(Re, 2 * (i+1), 500, i);
            Reproducir(Do, 2 * (i+1), 500, i);

            Reproducir(Sol, 2 * (i+1), 500, i);
            Reproducir(Sol, 2 * (i+1), 500, i);
            Reproducir(Fa, 2 * (i+1), 500, i);
            Reproducir(Fa, 2 * (i+1), 500, i);
            Reproducir(Mi, 2 * (i+1), 500, i);
            Reproducir(Mi, 2 * (i+1), 500, i);
            Reproducir(Re, 2 * (i+1), 500, i);
            Si(2*(i+1)<5){
                Reproducir(Sol, 2 * (i+1), 500, i);
                Reproducir(Sol, 2 * (i+1), 500, i);
                Reproducir(Fa, 2 * (i+1), 500, i);
                Reproducir(Fa, 2 * (i+1), 500, i);
                Reproducir(Mi, 2 * (i+1), 500, i);
                Reproducir(Mi, 2 * (i+1), 500, i);
                Reproducir(Re, 2 * (i+1), 500, i);

                Reproducir(Do, 2 * (i+1), 500, i);
                Reproducir(Do, 2 * (i+1), 500, i);
                Reproducir(Sol, 2 * (i+1), 500, i);
                Reproducir(Sol, 2 * (i+1), 500, i);
                Reproducir(La, 2 * (i+1), 500, i);
                Reproducir(La, 2 * (i+1), 500, i);
                Reproducir(Sol, 2 * (i+1), 500, i);
                Reproducir(Fa, 2 * (i+1), 500, i);
                Reproducir(Fa, 2 * (i+1), 500, i);
                Reproducir(Mi, 2 * (i+1), 500, i);
                Reproducir(Mi, 2 * (i+1), 500, i);
                Reproducir(Re, 2 * (i+1), 500, i);
                Reproducir(Re, 2 * (i+1), 500, i);
                Reproducir(Do, 2 * (i+1), 500, i);
            }
        }
    }
    
    entero sum(entero num1, entero num2){
        retorna num1+num2;
    } 
} 


Pista algo2  {
    var entero arreglo arr10,arr20,arr30 [][]={{5,10,15},{20,25,30}};
}

instrucciones.ejecutar
listaPista.add algo2
   
         
Pista algo1 {


    Principal() {
        
    }

}

Pista nuevaPista {

    Var Cadena texto = "Finnn";

    

    Cadena ejecutarCancion(){
        Para(Var Entero i = 0; i < 3; i++){
            Reproducir(Do, 2 * (i+1), 500, i);
            Reproducir(Sol, 2 * (i+1), 500, i);
            Reproducir(Sol, 2 * (i+1), 500, i);
            Reproducir(La, 2 * (i+1), 500, i);
            Reproducir(La, 2 * (i+1), 500, i);
            Reproducir(Sol, 2 * (i+1), 500, i);
            Esperar(500, i);

            Reproducir(Fa, 2 * (i+1), 500, i);
            Reproducir(Fa, 2 * (i+1), 500, i);
            Reproducir(Mi, 2 * (i+1), 500, i);
            Reproducir(Mi, 2 * (i+1), 500, i);
            Reproducir(Re, 2 * (i+1), 500, i);
            Reproducir(Re, 2 * (i+1), 500, i);
            Reproducir(Do, 2 * (i+1), 500, i);
            Esperar(500, i);

            Reproducir(Sol, 2 * (i+1), 500, i);
            Reproducir(Sol, 2 * (i+1), 500, i);
            Reproducir(Fa, 2 * (i+1), 500, i);
            Reproducir(Fa, 2 * (i+1), 500, i);
            Reproducir(Mi, 2 * (i+1), 500, i);
            Reproducir(Mi, 2 * (i+1), 500, i);
            Reproducir(Re, 2 * (i+1), 500, i);
            Esperar(500, i);

            Si(2*(i+1)<5){
                Reproducir(Sol, 2 * (i+1), 500, i);
                Reproducir(Sol, 2 * (i+1), 500, i);
                Reproducir(Fa, 2 * (i+1), 500, i);
                Reproducir(Fa, 2 * (i+1), 500, i);
                Reproducir(Mi, 2 * (i+1), 500, i);
                Reproducir(Mi, 2 * (i+1), 500, i);
                Reproducir(Re, 2 * (i+1), 500, i);
                Esperar(500, i);

                Reproducir(Do, 2 * (i+1), 500, i);
                Reproducir(Do, 2 * (i+1), 500, i);
                Reproducir(Sol, 2 * (i+1), 500, i);
                Reproducir(Sol, 2 * (i+1), 500, i);
                Reproducir(La, 2 * (i+1), 500, i);
                Reproducir(La, 2 * (i+1), 500, i);
                Reproducir(Sol, 2 * (i+1), 500, i);
                Esperar(500, i);

                Reproducir(Fa, 2 * (i+1), 500, i);
                Reproducir(Fa, 2 * (i+1), 500, i);
                Reproducir(Mi, 2 * (i+1), 500, i);
                Reproducir(Mi, 2 * (i+1), 500, i);
                Reproducir(Re, 2 * (i+1), 500, i);
                Reproducir(Re, 2 * (i+1), 500, i);
                Reproducir(Do, 2 * (i+1), 500, i);
            }
        }

        Retorna texto;
    }

    Principal(){
        Mensaje(ejecutarCancion());
    }

}